if (isBuildModule.toBoolean()) {
 //作为独立App应用运行
 apply plugin: 'com.android.application'
} else {
 //作为组件运行
 apply plugin: 'com.android.library'
}
android {
 compileSdkVersion rootProject.ext.android.compileSdkVersion
 defaultConfig {
  minSdkVersion rootProject.ext.android.minSdkVersion
  targetSdkVersion rootProject.ext.android.targetSdkVersion
  versionCode rootProject.ext.android.versionCode
  versionName rootProject.ext.android.versionName
  testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
  //阿里路由框架配置
  javaCompileOptions {
   annotationProcessorOptions {
    arguments = [AROUTER_MODULE_NAME: project.getName()]
   }
  }
 }
 signingConfigs {
  release {
   storeFile keystore.storeFile
   storePassword keystore.storePassword
   keyAlias keystore.keyAlias
   keyPassword keystore.keyPassword
  }
 }
 lintOptions {
  checkReleaseBuilds false
  // Or, if you prefer, you can continue to check for errors in release builds,
  // but continue the build even when errors are found:
  abortOnError false
 }
 sourceSets {
  main {
   jniLibs.srcDirs = ['libs']
   if (isBuildModule.toBoolean()) {
    //独立运行
    manifest.srcFile 'src/main/alone/AndroidManifest.xml'
   } else {
    //合并到宿主
    manifest.srcFile 'src/main/AndroidManifest.xml'
    resources {
     //正式版本时，排除alone文件夹下所有调试文件
     exclude 'src/main/alone/*'
    }
   }
  }
 }
 buildTypes {
  debug {
   minifyEnabled false
   proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
   signingConfig signingConfigs.release
  }
  release {
   minifyEnabled false
   proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
   signingConfig signingConfigs.release
  }
 }
 dataBinding {
  enabled true
 }
}


